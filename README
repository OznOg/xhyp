
     __  __     _   ___   ______      _____ ____  _____ _____ 
     \ \/ /    | | | \ \ / /  _ \    |  ___|  _ \| ____| ____|
      \  /_____| |_| |\ V /| |_) |   | |_  | |_) |  _| |  _|  
      /  \_____|  _  | | | |  __/    |  _| |  _ <| |___| |___ 
     /_/\_\    |_| |_| |_| |_|       |_|   |_| \_\_____|_____|
                                                              

This programm is in alpha stage.
It actually runs on a versatile board inside of qemu.

This file gives you informations about using the xhyp hypervisor

	0) configure xhyp
	1) configure xhyp with guest domains
	2) build xhyp core
	3) test xhyp

===============================================================================
	0) configure xhyp

You need to have your cross compiler in your PATH, or add it manyally.
If you prefere, you can tweak the cmake toolchain file in the source directory
to point to your compiler.

Then, create a build directory somewhere and invoke cmake from it:

$ mkdir build && cd build
$ cmake /path/to/sources/

The default configuration should be ok for an overview; use ccmake or cmake-gui
to tune basic configuration.

from build directory
$ ccmake .

or

$ cmake-gui .

===============================================================================
	1) configure xhyp with guest domains

Use the config.domains file in the domains directory
you will find informations on the structure of the file
on the xhyp web site: http://x-hyp.org/

The configuration should be obvious.

Use defaults domains you will find on the web site at
	http://xhyp.org/download/

or build your own domain using informations at
	http://xhyp.org/support/documentation/

For adding precompiled os, you need to add your os in the os directory in
sources, and adapt the CMakeLists.txt in there to copy the os to the
compilation tree.


===============================================================================
	2) build xhyp core

Just run "make" in your build directory once configuration (cmake stage) is
done.

For now, arm is the only one architecture hanled, and "versatile" the only
board supported.

in this file, toolchain.inc you will probably need to change
the cross compiler prefix and the PATH to find it.

===============================================================================

	3) test xhyp

You can actually test xhyp inside a qemu box with:

#  qemu-system-arm -M versatilepb -kernel xhyp -nographic

Contact us for more informations at contact@xhyp.org

We expect to soon propose new architectures and boards for the xhyp
hypervisor.

===============================================================================

	4) Building a para virtualized OS

Once you ported your OS on x-hyp you can test it by first 
compute a binary to include in the x-hyp image.
For example for Linux:

        LINUX=${LINUX_BASE}/vmlinux
        your-custom-objcopy $LINUX -O  binary os/linux.bin

Then adapt the CMakeLists.txt in there to copy the os to the
compilation tree.

then add the configuration in the domains/config.domains file
For example for Linux:


